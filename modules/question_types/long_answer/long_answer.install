<?php

/**
 * Long answer questions.
 * @file
 */

/**
 * Implements hook_install().
 */
function long_answer_install() {
  variable_set('node_options_long_answer', array('status'));
}

/**
 * Implements hook_schema().
 */
function long_answer_schema() {
  // Properties for a question nodes go in here:
  $schema['quiz_long_answer_properties'] = array(
      'fields'      => array(
          'qid'    => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
          'vid'    => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
          'rubric' => array('type' => 'text'),
      ),
      'primary key' => array('qid', 'vid'),
  );

  // User answers go in here.
  $schema['quiz_long_answer_user_answers'] = array(
      'fields'      => array(
          'answer_id'              => array('type' => 'serial', 'unsigned' => TRUE, 'not null' => TRUE),
          'question_qid'           => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
          'question_vid'           => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
          'result_id'              => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE,),
          'score'                  => array('type' => 'float', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
          'is_evaluated'           => array('type' => 'int', 'unsigned' => TRUE, 'size' => 'tiny', 'default' => 0, 'not null' => TRUE),
          'answer'                 => array('type' => 'text'),
          'answer_feedback'        => array('type' => 'text'),
          'answer_feedback_format' => array('type' => 'varchar', 'length' => 255),
      ),
      'primary key' => array('answer_id'),
      'unique keys' => array(
          'ids' => array('result_id', 'question_qid', 'question_vid'),
      ),
  );

  return $schema;
}

/**
 * Adding feedback field to table {quiz_long_answer_user_answers}
 */
function long_answer_update_7401() {
  $spec = array(
      'type'     => 'text',
      'not null' => FALSE,
  );
  db_add_field('quiz_long_answer_user_answers', 'answer_feedback', $spec);
}

/**
 * Adding feedback format field to table {quiz_long_answer_user_answers}
 */
function long_answer_update_7402() {
  if (!db_field_exists('quiz_long_answer_user_answers', 'answer_feedback_format')) {
    $spec = array(
        'type'   => 'varchar',
        'length' => 255,
    );
    db_add_field('quiz_long_answer_user_answers', 'answer_feedback_format', $spec);
  }
}

/**
 * Change schema per change of question content.
 */
function long_answer_update_7600() {
  db_rename_table('quiz_long_answer_node_properties', 'quiz_long_answer_properties');

  $spec_1 = array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE);
  db_change_field('quiz_long_answer_properties', 'nid', 'qid', $spec_1);

  $spec_2 = array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE);
  db_change_field('quiz_long_answer_user_answers', 'question_nid', 'question_qid', $spec_2);
}

/**
 * Convert global configuration for questions to question type entity.
 */
function long_answer_7601() {
  foreach (quiz_question_get_types() as $question_type) {
    if ('long_answer' === $question_type->plugin) {
      $question_type->setConfig('long_answer_default_max_score', variable_get('long_answer_default_max_score', 10));
    }
  }
}
