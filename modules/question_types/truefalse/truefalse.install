<?php

/**
 * @file
 * The installer file for truefalse question type. *
 */

/**
 * Implements hook_install().
 */
function truefalse_install() {
  if (!db_table_exists('quiz_truefalse_node')) {

  }
  else {
    // TODO Please review the conversion of this statement to the D7 database API syntax.
    /* db_query("UPDATE {system} SET name = 'truefalse' WHERE name = 'true_false'") */
    db_update('system')
      ->fields(array('name' => 'truefalse'))
      ->condition('name', 'true_false')
      ->execute();

    // TODO Please review the conversion of this statement to the D7 database API syntax.
    /* db_query("UPDATE {node} SET type = 'truefalse' WHERE type = 'true_false'") */
    db_update('node')
      ->fields(array('type' => 'truefalse'))
      ->condition('type', 'true_false')
      ->execute();

    // TODO Please review the conversion of this statement to the D7 database API syntax.
    /* db_query("UPDATE {system} SET type = 'truefalse' WHERE type = 'true_false'") */
    db_update('system')
      ->fields(array('type' => 'truefalse'))
      ->condition('type', 'true_false')
      ->execute();

    // TODO Please review the conversion of this statement to the D7 database API syntax.
    /* db_query("UPDATE {taxonomy_vocabulary_node_type} SET type = 'truefalse' WHERE type = 'true_false'") */
    /*
      db_update('taxonomy_vocabulary_node_type')
      ->fields(array('type' =>  'truefalse'))
      ->condition('type', 'true_false')
      ->execute();
     */
  }
  variable_set('node_options_truefalse', array('status'));
}

/**
 * Implements hook_schema().
 */
function truefalse_schema() {
  // Extensions to nodes for T/F
  $schema['quiz_truefalse'] = array(
      'fields'      => array(
          'qid'            => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE,),
          'vid'            => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE,),
          'correct_answer' => array('type' => 'int', 'unsigned' => TRUE, 'size' => 'tiny', 'default' => 0, 'description' => 'The correct answer for the user to give. 1 for true.'),
      ),
      'primary key' => array('vid', 'qid'),
  );

  // Place to store user answers for T/F questions
  $schema['quiz_truefalse_user_answers'] = array(
      'fields'      => array(
          'question_qid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
          'question_vid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
          'result_id'    => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
          'answer'       => array('type' => 'int', 'unsigned' => TRUE, 'size' => 'tiny', 'default' => 0),
          'score'        => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      ),
      'primary key' => array('result_id', 'question_qid', 'question_vid'),
  );

  return $schema;
}

/**
 * Change schema per question structure changed.
 */
function truefalse_update_7600() {
  db_rename_table('quiz_truefalse_node', 'quiz_truefalse');
  $spec = array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE);
  db_change_field('quiz_truefalse', 'nid', 'qid', $spec);
  db_change_field('quiz_truefalse_user_answers', 'question_nid', 'question_qid', $spec);
}
