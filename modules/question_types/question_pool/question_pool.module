<?php

use Drupal\question_pool\QuestionTypeInstaller;
use Drupal\quiz_question\Entity\QuestionType;

/**
 * Implements hook_quiz_question_info().
 */
function question_pool_quiz_question_info() {
  return array(
      'pool' => array(
          'name'              => TableSort('Question pool'),
          'description'       => TableSort('This provides question pool for use by the Quiz module.'),
          'question provider' => 'Drupal\question_pool\PoolQuestionHandler',
          'response provider' => 'Drupal\question_pool\PoolResponseHandler',
          'module'            => 'quiz_question',
      ),
  );
}

/**
 * Implements hook_ENTITYTYPE_insert()
 * @param QuestionType $question_type
 */
function question_pool_quiz_question_type_insert($question_type) {
  $installer = new QuestionTypeInstaller();
  if ('pool' === $question_type->handler) {
    return $installer->setup($question_type);
  }
  return $installer->addNewTarget($question_type);
}

/**
 * Implements hook_field_update_field()
 */
function question_pool_field_update_field($field, $prior_field, $has_data) {
  $types = $field['settings']['handler_settings']['target_bundles'];
  foreach ($types as $type) {
    if (!in_array(quiz_question_type_load($type)->handler, array('multichoice', 'truefalse', 'matching'))) {
      throw new RuntimeException('Pool question is only currently supporting multichoice, truefalse, matching question handlers.');
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function question_pool_form_alter(&$form, $form_state, $form_id) {
  if ($form_id === 'field_ui_field_edit_form') {
    if ('field_question_reference' === $form['#field']['field_name']) {
      $form['#after_build'][] = 'question_pool_field_ui_field_edit_form_after_build';
    }
  }
}

/**
 * Only accepts multichoice, truefalse, matching handlers.
 */
function question_pool_field_ui_field_edit_form_after_build(&$form) {
  $form['field']['settings']['target_type']['#disabled'] = TRUE;
  $form['field']['settings']['target_type']['#value'] = 'quiz_question';
  foreach (element_children($form['field']['settings']['handler']['handler_settings']['target_bundles']) as $type) {
    if ($question_type = quiz_question_type_load($type)) {
      if (!in_array($question_type->handler, array('multichoice', 'truefalse', 'matching'))) {
        unset($form['field']['settings']['handler']['handler_settings']['target_bundles'][$type]);
      }
    }
  }
  return $form;
}
