<?php

use Drupal\question_pool\QuestionTypeInstaller;
use Drupal\quiz_question\Entity\QuestionType;

/**
 * Implements hook_quiz_question_info().
 */
function question_pool_quiz_question_info() {
  return array(
      'pool' => array(
          'name'              => t('Question pool'),
          'description'       => t('This provides question pool for use by the Quiz module.'),
          'question provider' => 'Drupal\question_pool\PoolQuestion',
          'response provider' => 'Drupal\question_pool\PoolResponse',
          'module'            => 'quiz_question',
      ),
  );
}

/**
 * Implement hook_forms.
 */
function question_pool_forms($form_id, $args) {
  $forms = array();

  $form_ids = explode("__", $form_id);
  if (!empty($form_ids) && count($form_ids) == 2) {
    $question_form_id = reset($form_ids);
  }
  else {
    return $forms;
  }

  $question_types = _quiz_question_get_implementations();
  foreach (array_keys($question_types) as $type) {
    if ($question_form_id == $type . '_question_pool_form') {
      $forms[$form_id]['callback'] = 'question_pool_form';
    }
  }
  return $forms;
}

/**
 * Implements hook_ENTITYTYPE_insert()
 * @param QuestionType $question_type
 */
function question_pool_quiz_question_type_insert($question_type) {
  if ('question_pool' === $question_type->plugin) {
    $installer = new QuestionTypeInstaller();
    $installer->setup($question_type);
  }
}


/**
 * â€¦
 * @param type $form
 * @param type $form_state
 * @param type $result_id
 * @param type $question
 * @return string
 */
function question_pool_form($form, &$form_state, $result_id, $question) {
  $form += $question->getAnsweringForm($form_state, $result_id);
  $form['#validate'][] = 'question_pool_form_validate';
  return $form;
}

function quiz_pool_question_get_result($pool_id, $rid, $question_id) {
  $result = db_select('quiz_pool_user_answers_questions', 'p')
    ->fields('p')
    ->condition('pool_qid', $pool_id)
    ->condition('question_qid', $question_id)
    ->condition('result_id', $rid)
    ->execute()
    ->fetchObject();

  if ($result) {
    $result->answer = unserialize($result->answer);
  }

  return $result;
}
