<?php

class QuestionPoolTestCase extends QuizQuestionTestCase {

  protected $questionPlugin = 'pool';

  public static function getInfo() {
    return array(
        'name'        => 'Question pool',
        'description' => 'Test cases for pool question type.',
        'group'       => 'Quiz question',
    );
  }

  function setUp($modules = array(), $admin_permissions = array(), $user_permissions = array()) {
    $modules[] = 'question_pool';
    $modules[] = 'entityreference';
    parent::setUp($modules, $admin_permissions, $user_permissions);
  }

  public function testCreateQuestion() {
    $this->checkStructure();
    $pool_question = $this->checkCreatePoolQUestion();
    $this->checkQuizChecking($pool_question);
  }

  private function checkStructure() {
    // Check new entity-reference field is created
    $this->assertNotNull(field_info_field('field_question_reference'));
    $this->assertNotNull(field_info_instance('quiz_question', 'field_question_reference', 'default_pool'));
  }

  private function checkCreatePoolQUestion() {
    $pool_question = $this->drupalCreateQuestion(array(
        'type'  => 'question_pool',
        'title' => 'Pool question title',
        'body'  => 'Pool body text',
    ));

    // Create sub-questions, link it to pool
    $sub_1 = $this->drupalCreateQuestion(array('type' => 'truefalse', 'correct_answer' => 1));
    $sub_2 = $this->drupalCreateQuestion(array('type' => 'truefalse', 'correct_answer' => 1));
    $sub_3 = $this->drupalCreateQuestion(array('type' => 'truefalse', 'correct_answer' => 1));
    $pool_question->field_question_reference[LANGUAGE_NONE] = array(
        array('target_id' => $sub_1->qid),
        array('target_id' => $sub_2->qid),
        array('target_id' => $sub_3->qid),
    );

    return $pool_question;
  }

  private function checkQuizChecking($pool_question) {
    // Create quiz, link pool to quiz
    $quiz = $this->linkQuestionToQuiz($pool_question);

    // Take quiz
    $this->drupalLogin($this->user);
    $this->drupalGet("quiz/{$quiz->qid}/take");
    # $this->drupalPost(NULL, array(â€¦), t('Finish'));
  }

}
