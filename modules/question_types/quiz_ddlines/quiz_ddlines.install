<?php

/**
 * Sponsored by: Senter for IKT i utdanningen
 * Code: paalj
 *
 * @file
 * Drag and drop Install (a quiz question type)
 */

/**
 * Implements hook_uninstall().
 */
function quiz_ddlines_uninstall() {
  // Delete instance:

  $instance = field_info_instance('node', 'field_image', 'quiz_ddlines');
  field_delete_instance($instance, FALSE);

  $var = array(
      'quiz_ddlines_canvas_width',
      'quiz_ddlines_canvas_height',
      'quiz_ddlines_hotspot_radius',
      'quiz_ddlines_pointer_radius',
      'quiz_ddlines_feedback_correct',
      'quiz_ddlines_feedback_wrong',
  );
  foreach ($var as $v) {
    variable_del($v);
  }
  drupal_set_message(t("The Quiz drag and drop module has been uninstalled. Nodes of this type may still exist, but they will not function properly."));
}

/**
 * Implements hook_schema().
 */
function quiz_ddlines_schema() {
  $schema['quiz_ddlines_question'] = array(
      'fields'      => array(
          'qid'              => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE,),
          'vid'              => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE,),
          'feedback_enabled' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0,),
          'hotspot_radius'   => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 10,),
          'ddlines_elements' => array('type' => 'text',),
          'execution_mode'   => array('type' => 'int', 'description' => "Execution mode. 0->with lines, 1->without lines", 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0,),
      ),
      'primary key' => array('qid', 'vid'),
  );

  // Place to store user answers
  $schema['quiz_ddlines_user_answers'] = array(
      'fields'      => array(
          'id'           => array('type' => 'serial', 'unsigned' => TRUE, 'not null' => TRUE),
          'result_id'    => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
          'question_qid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
          'question_vid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
      ),
      'primary key' => array('id'),
      'indexes'     => array(
          'answer_id' => array('result_id', 'question_qid', 'question_vid'),
      ),
  );

  $schema['quiz_ddlines_user_answer_multi'] = array(
      'fields'       => array(
          'user_answer_id' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
          'hotspot_id'     => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
          'label_id'       => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
      ),
      'foreign keys' => array(
          'answer_id' => array(
              'table'   => 'quiz_ddlines_user_answers',
              'columns' => array('user_answer_id' => 'id'),
          ),
      ),
      'indexes'      => array(
          'answer_id' => array('user_answer_id'),
      ),
  );

  return $schema;
}

/**
 * Adding Execution mode column. Makes it possible to
 * run the test in two different modes.
 */
function quiz_ddlines_update_7401() {
  // Add field for execution mode
  $spec = array(
      'type'        => 'int',
      'description' => "Execution mode. 0->with lines, 1->without lines",
      'not null'    => TRUE,
      'unsigned'    => TRUE,
      'default'     => 0,
  );
  db_add_field('quiz_ddlines_node', 'execution_mode', $spec);
}

/**
 * Update schema per structure of question is changed.
 */
function quiz_ddlines_update_7600() {
  db_rename_table('quiz_ddlines_node', 'quiz_ddlines_question');
  $spec_1 = array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE);
  db_change_field('quiz_ddlines_question', 'nid', 'qid', $spec_1);

  $spec_2 = array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE);
  db_change_field('quiz_ddlines_user_answers', 'question_nid', 'question_qid', $spec_2);
}

/**
 * Convert global configuration for questions to question type entity.
 */
function quiz_ddlines_update_7601() {
  foreach (quiz_question_get_types() as $question_type) {
    if ('quiz_ddlines' === $question_type->plugin) {
      $question_type
        ->setConfig('quiz_ddlines_feedback_correct', variable_get('quiz_ddlines_feedback_correct', t('Correct')))
        ->setConfig('quiz_ddlines_feedback_wrong', variable_get('quiz_ddlines_feedback_wrong', t('Wrong')))
        ->setConfig('quiz_ddlines_canvas_height', variable_get('quiz_ddlines_canvas_height', Defaults::CANVAS_HEIGHT))
        ->setConfig('quiz_ddlines_hotspot_radius', variable_get('quiz_ddlines_hotspot_radius', Defaults::HOTSPOT_RADIUS))
        ->save()
      ;
    }
  }
}
